{"version":3,"sources":["../../../config-wrap-start-default.js","../lib/almond.js","controllers/templateHelpers.js","views/advanced/whenItem.js","views/advanced/firstWhenItem.js","views/advanced/whenCollection.js","views/advanced/thenItem.js","views/advanced/thenCollection.js","views/advanced/elseItem.js","views/advanced/elseCollection.js","views/advanced/conditionItem.js","views/advanced/conditionCollection.js","views/actions/whenItem.js","views/actions/whenCollection.js","views/actions/conditionLayout.js","controllers/returnChildView.js","models/whenModel.js","models/whenCollection.js","models/thenModel.js","models/thenCollection.js","models/elseModel.js","models/elseCollection.js","models/conditionModel.js","models/conditionCollection.js","views/drawerHeader.js","controllers/newCondition.js","controllers/updateSettings.js","controllers/clickControls.js","controllers/undo.js","controllers/coreValues.js","controllers/coreComparators.js","controllers/coreTriggers.js","controllers/getDrawerHeader.js","controllers/trackKeyChanges.js","controllers/maybeConvertConditions.js","controllers/filters.js","controllers/loadControllers.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","Marionette","extend","initialize","this","listenTo","nfRadio","channel","addTemplateHelpers","model","set","renderKeySelect","renderComparators","renderTriggers","renderWhenValue","renderItemValue","currentValue","modelType","groups","fieldCollection","request","fieldOptions","_","chain","models","filter","field","get","notForWhen","includes","label","key","sortBy","toLowerCase","type","options","calcCollection","calcOptions","calc","filters","each","Backbone","Radio","currentComparator","defaultComparators","equal","nfcli18n","templateHelperEquals","notequal","templateHelperDoesNotEqual","contains","templateHelperContains","notcontains","templateHelperDoesNotContain","greater","templateHelperGreaterThan","less","templateHelperLessThan","comparators","omit","lessequal","templateHelperLessThanOrEqual","greaterequal","templateHelperGreaterThanOrEqual","fieldModel","typeModel","currentTrigger","defaultTriggers","show_field","templateHelperShowField","hide_field","templateHelperHideField","change_value","templateHelperChangeValue","set_required","templateHelperSetRequired","unset_required","templateHelperUnsetRequired","triggers","comparator","template","defaultHTML","html","trigger","ItemView","render","events","change .setting","click .nf-remove-when","changeSetting","clickRemove","WhenItem","FirstWhenItem","CollectionView","getChildView","item","collection","first","firstWhenDiv","conditionModel","attachHtml","collectionView","childView","append","el","isBuffering","_bufferedChildren","_insertBefore","_insertAfter","click .nf-remove-then","ThenItem","click .nf-remove-else","ElseItem","WhenCollectionView","ThenCollectionView","ElseCollectionView","LayoutView","regions","when","then","else","drawerClosed","onRender","find","show","click .nf-remove-condition","click .nf-collapse-condition","click .nf-add-when","click .nf-add-then","click .nf-add-else","clickCollapse","clickAddWhen","clickAddThen","clickAddElse","conditionItem","dataModel","onShow","add","onBeforeDestroy","reset","WhenCollection","change .condition-setting","AdvancedView","ActionsView","reply","getAdvancedChildView","getActionChildView","settingModel","Model","defaults","connector","WhenModel","Collection","ThenModel","ElseModel","ThenCollection","ElseCollection","collapsed","process","ConditionModel","click .nf-add-new","clickAddNew","addNew","conditionCollection","object","newConditionCondition","change","dashicon","data","updateSetting","target","val","before","after","changes","attr","removeCondition","collapseCondition","removeWhen","removeThen","removeElse","addWhen","addThen","addElse","remove","clickControlsConditionlabel","whenModel","removeItem","clickControlsConditionWhen","thenModel","clickControlsConditionThen","elseModel","clickControlsConditionElse","itemModel","clickControlsConditionWhenCriteron","clickControlsConditionDoItem","clickControlsConditionElseItem","undoAddCondition","undoRemoveCondition","undoAddWhen","undoAddThen","undoAddElse","undoRemoveWhen","undoRemoveThen","undoRemoveElse","undoAll","changeCollection","results","where","changeModel","maybeRemoveChange","getCheckboxValue","getListValue","getListCountryValue","nfListCountries","getCheckboxComparators","getListSingleComparators","getListComparators","is","coreComparatorsIs","isnot","coreComparatorsIsNot","has","coreComparatorsHasSelected","hasnot","coreComparatorsDoesNotHaveSelected","getListTriggers","getSubmitTriggers","getHTMLTriggers","getDividerTriggers","getHiddenTriggers","select_option","coreTriggersSelectOption","deselect_option","coreTriggersDeselectOption","show_option","coreTriggersShowOption","hide_option","coreTriggersHideOption","DrawerHeaderView","getDrawerHeaderView","registerKeyChangeTracker","updateKey","keyModel","oldKey","_previousAttributes","newKey","cid","maybeConvertConditions","actionModel","conditions","addFilter","getFilters","TemplateHelpers","ReturnChildView","ConditionCollection","NewCondition","UpdateSettings","ClickControls","Undo","CoreValues","CoreComparators","CoreTriggers","GetDrawerHeader","TrackKeyChanges","MaybeConvertConditions","Filters","LoadControllers","Application","afterNFLoad","onStart","app","start"],"mappings":"CAAA,WCUA,GAAAA,GAAAC,EAAAC,GACA,SAAAC,GAUA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAAC,KAAAH,EAAAC,GAWA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAZ,GAAAA,EAAAa,MAAA,KACAC,EAAAC,EAAAD,IACAE,EAAAF,GAAAA,EAAA,QAGA,IAAAf,GAAA,MAAAA,EAAAkB,OAAA,GAIA,GAAAjB,EAAA,CAgBA,IAfAD,EAAAA,EAAAc,MAAA,KACAR,EAAAN,EAAAmB,OAAA,EAGAH,EAAAI,cAAAC,EAAAC,KAAAtB,EAAAM,MACAN,EAAAM,GAAAN,EAAAM,GAAAiB,QAAAF,EAAA,KAOArB,EAAAa,EAAAW,MAAA,EAAAX,EAAAM,OAAA,GAAAM,OAAAzB,GAGAU,EAAA,EAAAA,EAAAV,EAAAmB,OAAAT,GAAA,EAEA,GAAA,OADAE,EAAAZ,EAAAU,IAEAV,EAAA0B,OAAAhB,EAAA,GACAA,GAAA,MACA,IAAA,OAAAE,EAAA,CACA,GAAA,IAAAF,IAAA,OAAAV,EAAA,IAAA,OAAAA,EAAA,IAOA,KACAU,GAAA,IACAV,EAAA0B,OAAAhB,EAAA,EAAA,GACAA,GAAA,GAMAV,EAAAA,EAAA2B,KAAA,SACA,KAAA3B,EAAA4B,QAAA,QAGA5B,EAAAA,EAAA6B,UAAA,GAKA,KAAAhB,GAAAI,IAAAF,EAAA,CAGA,IAFAb,EAAAF,EAAAc,MAAA,KAEAJ,EAAAR,EAAAiB,OAAAT,EAAA,EAAAA,GAAA,EAAA,CAGA,GAFAP,EAAAD,EAAAsB,MAAA,EAAAd,GAAAiB,KAAA,KAEAd,EAGA,IAAAF,EAAAE,EAAAM,OAAAR,EAAA,EAAAA,GAAA,EAKA,IAJAP,EAAAW,EAAAF,EAAAW,MAAA,EAAAb,GAAAgB,KAAA,SAKAvB,EAAAA,EAAAD,IACA,CAEAE,EAAAD,EACAG,EAAAG,CACA,OAMA,GAAAL,EACA,OAMAG,GAAAS,GAAAA,EAAAd,KACAK,EAAAS,EAAAd,GACAM,EAAAC,IAIAL,GAAAG,IACAH,EAAAG,EACAD,EAAAE,GAGAJ,IACAH,EAAAwB,OAAA,EAAAnB,EAAAF,GACAL,EAAAE,EAAAyB,KAAA,MAIA,MAAA3B,GAGA,QAAA8B,GAAAC,EAAAC,GACA,MAAA,YAIA,GAAAC,GAAAC,EAAApC,KAAAqC,UAAA,EAQA,OAHA,gBAAAF,GAAA,IAAA,IAAAA,EAAAd,QACAc,EAAAG,KAAA,MAEAC,EAAAC,MAAA7C,EAAAwC,EAAAR,QAAAM,EAAAC,MAIA,QAAAO,GAAAR,GACA,MAAA,UAAA/B,GACA,MAAAD,GAAAC,EAAA+B,IAIA,QAAAS,GAAAC,GACA,MAAA,UAAAC,GACAC,EAAAF,GAAAC,GAIA,QAAAE,GAAA5C,GACA,GAAAN,EAAAmD,EAAA7C,GAAA,CACA,GAAAiC,GAAAY,EAAA7C,SACA6C,GAAA7C,GACA8C,EAAA9C,IAAA,EACA+C,EAAAT,MAAA7C,EAAAwC,GAGA,IAAAvC,EAAAiD,EAAA3C,KAAAN,EAAAoD,EAAA9C,GACA,KAAA,IAAAgD,OAAA,MAAAhD,EAEA,OAAA2C,GAAA3C,GAMA,QAAAiD,GAAAjD,GACA,GAAAkD,GACAC,EAAAnD,EAAAA,EAAA4B,QAAA,MAAA,CAKA,OAJAuB,IAAA,IACAD,EAAAlD,EAAA6B,UAAA,EAAAsB,GACAnD,EAAAA,EAAA6B,UAAAsB,EAAA,EAAAnD,EAAAmB,UAEA+B,EAAAlD,GA8CA,QAAAoD,GAAApD,GACA,MAAA,YACA,MAAAgB,IAAAA,EAAAA,QAAAA,EAAAA,OAAAhB,QA1OA,GAAA+C,GAAAV,EAAAgB,EAAAC,EACAX,KACAE,KACA7B,KACA8B,KACAjD,EAAA0D,OAAAC,UAAAC,eACAvB,KAAAV,MACAH,EAAA,OA2LAgC,GAAA,SAAArD,EAAA+B,GACA,GAAA2B,GACAC,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,EA2BA,OAzBA3D,GAAA2D,EAAA,GAEAT,IACAA,EAAAnD,EAAAmD,EAAAnB,GACA2B,EAAAd,EAAAM,IAIAA,EAEAlD,EADA0D,GAAAA,EAAA3D,UACA2D,EAAA3D,UAAAC,EAAAuC,EAAAR,IAEAhC,EAAAC,EAAA+B,IAGA/B,EAAAD,EAAAC,EAAA+B,GACA4B,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,GACA3D,EAAA2D,EAAA,GACAT,IACAQ,EAAAd,EAAAM,MAMAU,EAAAV,EAAAA,EAAA,IAAAlD,EAAAA,EACA6D,EAAA7D,EACA8D,GAAAZ,EACAa,EAAAL,IAUAJ,GACA/D,QAAA,SAAAS,GACA,MAAA8B,GAAA9B,IAEAgE,QAAA,SAAAhE,GACA,GAAAiE,GAAAtB,EAAA3C,EACA,YAAA,KAAAiE,EACAA,EAEAtB,EAAA3C,OAGAkE,OAAA,SAAAlE,GACA,OACAmE,GAAAnE,EACAoE,IAAA,GACAJ,QAAArB,EAAA3C,GACAgB,OAAAoC,EAAApD,MAKA+C,EAAA,SAAA/C,EAAAqE,EAAAC,EAAAvC,GACA,GAAAwC,GAAA9B,EAAA+B,EAAAzD,EAAAL,EAGA+D,EAFAxC,KACAyC,QAAAJ,EAOA,IAHAvC,EAAAA,GAAA/B,EAGA,cAAA0E,GAAA,aAAAA,EAAA,CAKA,IADAL,GAAAA,EAAAlD,QAAAmD,EAAAnD,QAAA,UAAA,UAAA,UAAAkD,EACA3D,EAAA,EAAAA,EAAA2D,EAAAlD,OAAAT,GAAA,EAKA,GAJAK,EAAAsC,EAAAgB,EAAA3D,GAAAqB,GAIA,aAHAU,EAAA1B,EAAA6C,GAIA3B,EAAAvB,GAAA4C,EAAA/D,QAAAS,OACA,IAAA,YAAAyC,EAEAR,EAAAvB,GAAA4C,EAAAU,QAAAhE,GACAyE,GAAA,MACA,IAAA,WAAAhC,EAEA8B,EAAAtC,EAAAvB,GAAA4C,EAAAY,OAAAlE,OACA,IAAAN,EAAAiD,EAAAF,IACA/C,EAAAmD,EAAAJ,IACA/C,EAAAoD,EAAAL,GACAR,EAAAvB,GAAAkC,EAAAH,OACA,CAAA,IAAA1B,EAAAgD,EAIA,KAAA,IAAAf,OAAAhD,EAAA,YAAAyC,EAHA1B,GAAAgD,EAAAY,KAAA5D,EAAA8C,EAAA/B,EAAAC,GAAA,GAAAS,EAAAC,OACAR,EAAAvB,GAAAiC,EAAAF,GAMA+B,EAAAF,EAAAA,EAAAhC,MAAAK,EAAA3C,GAAAiC,OAAA2C,GAEA5E,IAIAuE,GAAAA,EAAAP,UAAAvE,GACA8E,EAAAP,UAAArB,EAAA3C,GACA2C,EAAA3C,GAAAuE,EAAAP,QACAQ,IAAA/E,GAAAgF,IAEA9B,EAAA3C,GAAAwE,QAGAxE,KAGA2C,EAAA3C,GAAAsE,IAIAhF,EAAAC,EAAA8C,EAAA,SAAAgC,EAAAC,EAAAvC,EAAAC,EAAA6C,GACA,GAAA,gBAAAR,GACA,MAAAf,GAAAe,GAEAf,EAAAe,GAAAC,GAMA1B,EAAAS,EAAAgB,EAAAC,GAAAV,EACA,KAAAS,EAAA3C,OAAA,CAMA,GAJAV,EAAAqD,EACArD,EAAAqD,MACAhC,EAAArB,EAAAqD,KAAArD,EAAAsD,WAEAA,EACA,MAGAA,GAAA5C,QAGA2C,EAAAC,EACAA,EAAAvC,EACAA,EAAA,MAEAsC,EAAA5E,EA6BA,MAxBA6E,GAAAA,GAAA,aAIA,kBAAAvC,KACAA,EAAAC,EACAA,EAAA6C,GAIA7C,EACAe,EAAAtD,EAAA4E,EAAAC,EAAAvC,GAQA+C,WAAA,WACA/B,EAAAtD,EAAA4E,EAAAC,EAAAvC,IACA,GAGAM,GAOAA,EAAArB,OAAA,SAAA+D,GACA,MAAA1C,GAAA0C,IAMAzF,EAAA0F,SAAArC,EAEAnD,EAAA,SAAAQ,EAAAqE,EAAAC,GACA,GAAA,gBAAAtE,GACA,KAAA,IAAAgD,OAAA,4DAIAqB,GAAA3C,SAIA4C,EAAAD,EACAA,MAGA3E,EAAAiD,EAAA3C,IAAAN,EAAAmD,EAAA7C,KACA6C,EAAA7C,IAAAA,EAAAqE,EAAAC,KAIA9E,EAAAyF,KACAC,QAAA,MAIA1F,EAAA,gBAAA,cCxaAA,EAAA,iCAAA,WAyTA,MAxTA2F,YAAA5B,OAAA6B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,aAAAH,KAAAI,oBACAJ,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAI,oBACAJ,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAI,oBACAJ,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAI,qBAIAA,mBAAA,SAAAC,GACAA,EAAAC,IAAA,kBAAAN,KAAAO,iBACAF,EAAAC,IAAA,oBAAAN,KAAAQ,mBACAH,EAAAC,IAAA,iBAAAN,KAAAS,gBACAJ,EAAAC,IAAA,kBAAAN,KAAAU,iBACAL,EAAAC,IAAA,kBAAAN,KAAAW,kBAGAJ,gBAAA,SAAAK,EAAAC,GAEA,GAAAC,MAEAC,EAAAb,EAAAC,QAAA,UAAAa,QAAA,kBACAC,EAAAC,EAAAC,MAAAJ,EAAAK,QACAC,OAAA,SAAAC,GAAA,OAAApB,EAAAC,QAAA,+BAAAmB,EAAAC,IAAA,SAAAP,QAAA,OAAAH,KAAA,IACAQ,OAAA,SAAAC,GAGA,GAAAE,IAAA,SAAA,KAAA,OAAA,OAAA,cAAA,WAAA,kBAAA,UAMA,OAJAF,GAAAC,IAAA,SAAAX,IACAY,EAAAA,EAAApF,OAAAoF,EAAAlF,QAAAgF,EAAAC,IAAA,QAAA,MAGAC,EAAAC,SAAAH,EAAAC,IAAA,UAAA,SAAAV,IAMApF,IAAA,SAAA6F,GACA,GAAAI,GAAAJ,EAAAC,IAAA,QAIA,YAHA,KAAAD,EAAAC,IAAA,gBAAA,EAAAD,EAAAC,IAAA,eAAA1F,SACA6F,EAAAJ,EAAAC,IAAA,iBAEAI,IAAAL,EAAAC,IAAA,OAAAG,MAAAA,KAEAE,OAAA,SAAAN,GACA,MAAAA,GAAAI,MAAAG,gBAEAzE,OAEA0D,GAAAhE,MAAA4E,MAAA,SAAAI,KAAA,QAAAC,QAAAd,GAEA,IAAAe,GAAA9B,EAAAC,QAAA,YAAAa,QAAA,cAAA,eAKA,IAAA,QAAAH,GAAA,EAAAmB,EAAAnG,OAAA,CACA,GAAAoG,GAAAD,EAAAvG,IAAA,SAAAyG,GACA,OAAAP,IAAAO,EAAAX,IAAA,QAAAG,MAAAQ,EAAAX,IAAA,UAGAT,GAAAhE,MAAA4E,MAAA,eAAAI,KAAA,OAAAC,QAAAE,IAMA,GAAAE,GAAAjC,EAAAC,QAAA,cAAAa,QAAA,mBAWA,OAVAE,GAAAkB,KAAAD,EAAA,SAAAd,GACAP,EAAAO,EAAAP,EAAAD,KAMAwB,SAAAC,MAAAnC,QAAA,OAAAa,QAAA,eAAA,2BAEAF,OAAAA,EAAAF,aAAAA,KAIAJ,kBAAA,SAAAsB,EAAAH,EAAAY,GACA,GAAAC,IACAC,OACAf,MAAAgB,SAAAC,qBACAvF,MAAA,SAGAwF,UACAlB,MAAAgB,SAAAG,2BACAzF,MAAA,YAGA0F,UACApB,MAAAgB,SAAAK,uBACA3F,MAAA,YAGA4F,aACAtB,MAAAgB,SAAAO,6BACA7F,MAAA,eAGA8F,SACAxB,MAAAgB,SAAAS,0BACA/F,MAAA,WAGAgG,MACA1B,MAAAgB,SAAAW,uBACAjG,MAAA,QAIA,IAAAuE,EAIA,GAAA,QAAAG,EAAA,CACA,GAAAwB,GAAApC,EAAAqC,KAAAf,EAAA,WAAA,cACAtB,GAAApB,OAAAwD,GACAE,WACA9B,MAAAgB,SAAAe,8BACArG,MAAA,aAGAsG,cACAhC,MAAAgB,SAAAiB,iCACAvG,MAAA,sBAGA,CAUA,GAAAwG,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAW,EAEA,IAAAiC,EAAA,CACA,GAAAN,GAAApD,EAAAC,QAAA,cAAAyD,EAAArC,IAAA,SAAAP,QAAA,kBAAAwB,EAAAD,EACA,KAAAe,EAAA,CACA,GAAAO,GAAA3D,EAAAC,QAAA,UAAAa,QAAA,WAAA4C,EAAArC,IAAA,QACA+B,GAAApD,EAAAC,QAAA,cAAA0D,EAAAtC,IAAA,eAAAP,QAAA,kBAAAwB,EAAAD,IAAAC,OAGA,IAAAc,GAAAd,MAIA,IAAAc,GAAAd,CAOA,OADAH,UAAAC,MAAAnC,QAAA,OAAAa,QAAA,eAAA,4BACAsC,YAAAA,EAAAf,kBAAAA,KAGA9B,eAAA,SAAAqB,EAAAH,EAAAmC,EAAA1G,GACA,GAAA2G,IACAC,YACAtC,MAAAgB,SAAAuB,wBACA7G,MAAA,cAGA8G,YACAxC,MAAAgB,SAAAyB,wBACA/G,MAAA,cAGAgH,cACA1C,MAAAgB,SAAA2B,0BACAjH,MAAA,gBAGAkH,cACA5C,MAAAgB,SAAA6B,0BACAnH,MAAA,gBAGAoH,gBACA9C,MAAAgB,SAAA+B,4BACArH,MAAA,kBAIA,IAAAuE,GAAA,SAAAG,EAAA,CAUA,GAAA8B,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAW,EAEA,QAAA,KAAAiC,EAAA,CACA,GAAAC,GAAA3D,EAAAC,QAAA,UAAAa,QAAA,WAAA4C,EAAArC,IAAA,SAEAmD,EAAAxE,EAAAC,QAAA,cAAAyD,EAAArC,IAAA,SAAAP,QAAA,eAAA+C,EACAW,KACAA,EAAAxE,EAAAC,QAAA,cAAA0D,EAAAtC,IAAA,eAAAP,QAAA,eAAA+C,IAAAA,OAGA,IAAAW,GAAAxE,EAAAC,QAAA,cAAA2B,GAAAd,QAAA,eAAA+C,IAAAA,MAGA,IAAAW,GAAAxE,EAAAC,QAAA,cAAA2B,GAAAd,QAAA,eAAA+C,IAAAA,CAQA,OADA1B,UAAAC,MAAAnC,QAAA,OAAAa,QAAA,eAAA,yBACA0D,SAAAA,EAAAZ,eAAAA,KAGApD,gBAAA,SAAAoB,EAAAH,EAAAgD,EAAAvH,GAIA,GAAAwH,GAAAvC,SAAAC,MAAAnC,QAAA,OAAAa,QAAA,eAAA,6BACA6D,EAAAD,GAAAxH,MAAAA,GAKA,IAAAuE,GAAA,QAAAG,EAAA,CAUA,GAAA8B,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAW,EAEA,IAAAiC,EAAA,CACA,GAAAkB,GAAA5E,EAAAC,QAAA,cAAAyD,EAAArC,IAAA,SAAAP,QAAA,iBAAAW,EAAAgD,EAAAvH,EACA,KAAA0H,EAAA,CACA,GAAAjB,GAAA3D,EAAAC,QAAA,UAAAa,QAAA,WAAA4C,EAAArC,IAAA,QACAuD,GAAA5E,EAAAC,QAAA,cAAA0D,EAAAtC,IAAA,eAAAP,QAAA,iBAAAW,EAAAgD,EAAAvH,IAAAyH,OAGAC,GAAAD,MAGA,IAAAC,GAAAD,CAGA,OAAAC,IAGAnE,gBAAA,SAAAgB,EAAAoD,EAAA3H,GAOA,GAAA,gBAAA2H,GACA,iBAAAA,GACA,mBAAAA,GACA,eAAAA,GACA,eAAAA,EAEA,MAAA,EAGA,IAAAH,GAAAvC,SAAAC,MAAAnC,QAAA,OAAAa,QAAA,eAAA,6BACA6D,EAAAD,GAAAxH,MAAAA,GAEA,IAAAuE,EAAA,CAUA,GAAAiC,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAW,EAEA,QAAA,KAAAiC,EAAA,CACA,GAAAC,GAAA3D,EAAAC,QAAA,UAAAa,QAAA,WAAA4C,EAAArC,IAAA,SACAuD,EAAA5E,EAAAC,QAAA,cAAAyD,EAAArC,IAAA,SAAAP,QAAA,iBAAAW,EAAAoD,EAAA3H,EACA0H,KACAA,EAAA5E,EAAAC,QAAA,cAAA0D,EAAAtC,IAAA,eAAAP,QAAA,iBAAAW,EAAAoD,EAAA3H,IAAAyH,QAIA,IAAAC,GAAAD,CAGA,OAAAC,QCrTA5K,EAAA,6BAAA,WAsBA,MArBA2F,YAAAmF,SAAAlF,QACA8E,SAAA,iCAEA7E,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAAiF,SAGAC,QACAC,kBAAA,gBACAC,wBAAA,eAGAC,cAAA,SAAA1G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,iBAAApG,EAAAqB,KAAAK,QAGAiF,YAAA,SAAA3G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,mBAAApG,EAAAqB,KAAAK,YClBAnG,EAAA,kCAAA,WAiBA,MAhBA2F,YAAAmF,SAAAlF,QACA8E,SAAA,uCAEA7E,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAAiF,SAGAC,QACAC,kBAAA,iBAGAE,cAAA,SAAA1G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,iBAAApG,EAAAqB,KAAAK,YCbAnG,EAAA,iCAAA,0BAAA,gCAAA,SAAAqL,EAAAC,GAyCA,MAxCA3F,YAAA4F,eAAA3F,QACA4F,aAAA,SAAAC,GACA,MAAAA,GAAAC,WAAAC,SAAAF,EACAH,EAEAD,GAKAxF,WAAA,SAAAgC,GACA/B,KAAA8F,aAAA/D,EAAA+D,aACA9F,KAAA+F,eAAAhE,EAAAgE,gBAIAC,WAAA,SAAAC,EAAAC,EAAArI,GACA,GAAAA,EACAmC,KAAA8F,aAAAK,OAAAD,EAAAE,IAEApG,KAAA+F,eAAAxE,IAAA,eACA0E,EAAAI,YAIAJ,EAAAK,kBAAAlK,OAAAyB,EAAA,EAAAqI,GAKAD,EAAAM,cAAAL,EAAArI,IACAoI,EAAAO,aAAAN,SChCAhM,EAAA,6BAAA,WAuBA,MAtBA2F,YAAAmF,SAAAlF,QACA8E,SAAA,2BAEA7E,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAAiF,SAGAC,QACAC,kBAAA,gBACAsB,wBAAA,eAGApB,cAAA,SAAA1G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,iBAAApG,EAAAqB,KAAAK,OACAH,EAAAC,QAAA,cAAA4E,QAAA,cAAApG,EAAAqB,KAAAK,QAGAiF,YAAA,SAAA3G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,mBAAApG,EAAAqB,KAAAK,YCnBAnG,EAAA,iCAAA,2BAAA,SAAAwM,GASA,MARA7G,YAAA4F,eAAA3F,QACAoG,UAAAQ,EAEA3G,WAAA,SAAAgC,SCJA7H,EAAA,6BAAA,WAsBA,MArBA2F,YAAAmF,SAAAlF,QACA8E,SAAA,2BAEA7E,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAAiF,SAGAC,QACAC,kBAAA,gBACAwB,wBAAA,eAGAtB,cAAA,SAAA1G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,iBAAApG,EAAAqB,KAAAK,QAGAiF,YAAA,SAAA3G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,mBAAApG,EAAAqB,KAAAK,YClBAnG,EAAA,iCAAA,2BAAA,SAAA0M,GASA,MARA/G,YAAA4F,eAAA3F,QACAoG,UAAAU,EAEA7G,WAAA,SAAAgC,SCJA7H,EAAA,gCAAA,gCAAA,gCAAA,iCAAA,SAAA2M,EAAAC,EAAAC,GA2DA,MA1DAlH,YAAAmH,WAAAlH,QACA8E,SAAA,iCACAqC,SACAC,KAAA,kBACAC,KAAA,kBACAC,KAAA,mBAGArH,WAAA,WAIAC,KAAAC,SAAAD,KAAAK,MAAA,mBAAAL,KAAAiF,QAKAjF,KAAAC,SAAAC,EAAAC,QAAA,UAAA,SAAAH,KAAAqH,eAGAC,SAAA,WACA,GAAAxB,GAAAlG,OAAAI,KAAAoG,IAAAmB,KAAA,iBACAvH,MAAAkH,KAAAM,KAAA,GAAAX,IAAAjB,WAAA5F,KAAAK,MAAAkB,IAAA,QAAAuE,aAAAA,EAAAC,eAAA/F,KAAAK,SACAL,KAAAK,MAAAkB,IAAA,eACAvB,KAAAmH,KAAAK,KAAA,GAAAV,IAAAlB,WAAA5F,KAAAK,MAAAkB,IAAA,WACAvB,KAAAoH,KAAAI,KAAA,GAAAT,IAAAnB,WAAA5F,KAAAK,MAAAkB,IAAA,aAIA2D,QACAuC,6BAAA,cACAC,+BAAA,gBACAC,qBAAA,eACAC,qBAAA,eACAC,qBAAA,gBAGAvC,YAAA,SAAA3G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,wBAAApG,EAAAqB,KAAAK,QAGAyH,cAAA,SAAAnJ,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,0BAAApG,EAAAqB,KAAAK,QAGA0H,aAAA,SAAApJ,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,gBAAApG,EAAAqB,KAAAK,QAGA2H,aAAA,SAAArJ,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,gBAAApG,EAAAqB,KAAAK,QAGA4H,aAAA,SAAAtJ,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,gBAAApG,EAAAqB,KAAAK,YCvDAnG,EAAA,sCAAA,gCAAA,SAAAgO,GAgCA,MA/BArI,YAAA4F,eAAA3F,QACAoG,UAAAgC,EAEAnI,WAAA,SAAAgC,GACA/B,KAAA4F,WAAA7D,EAAAoG,UAAA5G,IAAA,eAGA6G,OAAA,WAIA,GAAApI,KAAA4F,WAAA/J,QACAmE,KAAA4F,WAAAyC,SAIAC,gBAAA,WAIA,GAAAtI,KAAA4F,WAAA/J,QAAA,EAAAmE,KAAA4F,WAAA/J,QAKA,IAAAmE,KAAA4F,WAAAxE,OAAA,GAAAG,IAAA,QAAAH,OAAA,GAAAG,IAAA,QACAvB,KAAA4F,WAAA2C,aC3BArO,EAAA,4BAAA,WAsBA,MArBA2F,YAAAmF,SAAAlF,QACA8E,SAAA,qCAEA7E,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAAiF,SAGAC,QACAC,kBAAA,gBACAC,wBAAA,eAGAC,cAAA,SAAA1G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,iBAAApG,EAAAqB,KAAAK,QAGAiF,YAAA,SAAA3G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,mBAAApG,EAAAqB,KAAAK,YClBAnG,EAAA,gCAAA,0BAAA,SAAAqL,GAiCA,MAhCA1F,YAAA4F,eAAA3F,QACAoG,UAAAX,EAEAxF,WAAA,SAAAgC,KAIAqG,OAAA,WAIA,GAAApI,KAAA4F,WAAA/J,QACAmE,KAAA4F,WAAAyC,SAIAC,gBAAA,WAIA,GAAAtI,KAAA4F,WAAA/J,QAAA,EAAAmE,KAAA4F,WAAA/J,QAKA,IAAAmE,KAAA4F,WAAAxE,OAAA,GAAAG,IAAA,QACAvB,KAAA4F,WAAA2C,aC3BArO,EAAA,iCAAA,gCAAA,SAAAsO,GAuCA,MAtCA3I,YAAAmH,WAAAlH,QACA8E,SAAA,uCAEAqC,SACAC,KAAA,YAGAnH,WAAA,SAAAgC,GACA/B,KAAAK,MAAA0B,EAAAoG,UAAA5G,IAAA,cACAQ,EAAAoG,UAAA5G,IAAA,gBAEAvB,KAAA4F,WAAA7D,EAAAoG,UAAA5G,IAAA,cAAAA,IAAA,QACAvB,KAAA+F,eAAAhE,EAAAoG,UAAA5G,IAAA,gBAGA+F,SAAA,WACAtH,KAAA4F,YAIA5F,KAAAkH,KAAAM,KAAA,GAAAgB,IAAA5C,WAAA5F,KAAA4F,eAGAV,QACAuD,4BAAA,gBACAd,qBAAA,gBAGAI,aAAA,SAAApJ,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,gBAAApG,EAAAqB,KAAAK,QAGAgF,cAAA,SAAA1G,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,iBAAApG,EAAAqB,KAAAK,YClCAnG,EAAA,+BAAA,qCAAA,iCAAA,SAAAwO,EAAAC,GAiBA,MAhBA9I,YAAA5B,OAAA6B,QACAC,WAAA,WACAG,EAAAC,QAAA,uBAAAyI,MAAA,uBAAA5I,KAAA6I,sBACA3I,EAAAC,QAAA,qBAAAyI,MAAA,uBAAA5I,KAAA8I,qBAGAD,qBAAA,SAAAE,GACA,MAAAL,IAGAI,mBAAA,SAAAC,GACA,MAAAJ,QCZAzO,EAAA,sBAAA,WAgBA,MAfAmI,UAAA2G,MAAAlJ,QACAmJ,UACAC,UAAA,MACAvH,IAAA,GACAgD,WAAA,GACAvH,MAAA,GACA0E,KAAA,QACAjB,UAAA,QAGAd,WAAA,WACAG,EAAAC,QAAA,cAAA4E,QAAA,iBAAA/E,WCZA9F,EAAA,yBAAA,oBAAA,SAAAiP,GAQA,MAPA9G,UAAA+G,WAAAtJ,QACAO,MAAA8I,EAEApJ,WAAA,SAAAqB,EAAAW,GACA/B,KAAA+B,QAAAA,OCLA7H,EAAA,sBAAA,WAeA,MAdAmI,UAAA2G,MAAAlJ,QACAmJ,UACAtH,IAAA,GACAoD,QAAA,GACA3H,MAAA,GACA0E,KAAA,QACAjB,UAAA,QAGAd,WAAA,WACAG,EAAAC,QAAA,cAAA4E,QAAA,iBAAA/E,WCXA9F,EAAA,yBAAA,oBAAA,SAAAmP,GAQA,MAPAhH,UAAA+G,WAAAtJ,QACAO,MAAAgJ,EAEAtJ,WAAA,SAAAqB,EAAAW,GACA/B,KAAA+B,QAAAA,OCLA7H,EAAA,sBAAA,WAeA,MAdAmI,UAAA2G,MAAAlJ,QACAmJ,UACAtH,IAAA,GACAoD,QAAA,GACA3H,MAAA,GACA0E,KAAA,QACAjB,UAAA,QAGAd,WAAA,WACAG,EAAAC,QAAA,cAAA4E,QAAA,iBAAA/E,WCXA9F,EAAA,yBAAA,oBAAA,SAAAoP,GAQA,MAPAjH,UAAA+G,WAAAtJ,QACAO,MAAAiJ,EAEAvJ,WAAA,SAAAqB,EAAAW,GACA/B,KAAA+B,QAAAA,OCLA7H,EAAA,yBAAA,wBAAA,wBAAA,yBAAA,SAAAsO,EAAAe,EAAAC,GAoBA,MAnBAnH,UAAA2G,MAAAlJ,QACAmJ,UACAQ,WAAA,EACAC,QAAA,EACAR,UAAA,MACAhC,UACAC,UACAC,SAGArH,WAAA,WACAC,KAAAM,IAAA,OAAA,GAAAkI,GAAAxI,KAAAuB,IAAA,SAAAwE,eAAA/F,QACAA,KAAAM,IAAA,OAAA,GAAAiJ,GAAAvJ,KAAAuB,IAAA,SAAAwE,eAAA/F,QACAA,KAAAM,IAAA,OAAA,GAAAkJ,GAAAxJ,KAAAuB,IAAA,SAAAwE,eAAA/F,QAEAE,EAAAC,QAAA,cAAA4E,QAAA,aAAA/E,WChBA9F,EAAA,8BAAA,yBAAA,SAAAyP,GAQA,MAPAtH,UAAA+G,WAAAtJ,QACAO,MAAAsJ,EAEA5J,WAAA,SAAAqB,EAAAW,GACA/B,KAAA+B,QAAAA,OCLA7H,EAAA,wBAAA,WAaA,MAZA2F,YAAAmF,SAAAlF,QACA8E,SAAA,qCAEAM,QACA0E,oBAAA,eAGAC,YAAA,SAAAlL,GACAuB,EAAAC,QAAA,cAAA4E,QAAA,eAAApG,QCTAzE,EAAA,4BAAA,wBAAA,oBAAA,SAAAsO,EAAAW,GA+BA,MA9BAtJ,YAAA5B,OAAA6B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,eAAAH,KAAA8J,SAGAA,OAAA,SAAAnL,GACA,GAAAoL,GAAA7J,EAAAC,QAAA,YAAAa,QAAA,cAAA,cACA+E,EAAAgE,EAAA1B,QAGA3G,GACAsI,OAAA,YACAtI,MAAAgB,SAAAuH,sBACAC,OAAA,QACAC,SAAA,YAGAC,GACAxE,WAAAmE,EAGA7J,GAAAC,QAAA,WAAAa,QAAA,kBAAA,eAAA+E,EAAA,KAAArE,EAAA0I,GAGAlK,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,kBC1BA9G,EAAA,gCAAA,WAkDA,MAjDA2F,YAAA5B,OAAA6B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAqK,gBAGAA,cAAA,SAAA1L,EAAAwJ,GACA,GAAA/K,GAAAwC,OAAAjB,EAAA2L,QAAAC,MACA1L,EAAAe,OAAAjB,EAAA2L,QAAAF,KAAA,MACAI,EAAArC,EAAA5G,IAAA1C,EAEAe,QAAAjB,EAAA2L,QAAA/C,KAAA,aAAA6C,KAAA,SACAjC,EAAA7H,IAAA,OAAAV,OAAAjB,EAAA2L,QAAA/C,KAAA,aAAA6C,KAAA,SAGAjC,EAAA7H,IAAAzB,EAAAzB,EAEA,IAAAqN,GAAArN,EAEAsN,GACAC,KAAA9L,EACA2L,OAAAA,EACAC,MAAAA,GAOA1E,MAAA,KAAAoC,EAAAvC,WAAAuC,EAAAA,EAAAvC,WAAA7D,QAAAgE,eAEAqE,GACArE,eAAAA,GAGArE,GACAsI,OAAA,YACAtI,MAAA,YACAwI,OAAA,WAAArL,EAAA,SAAA2L,EAAA,OAAAC,EAGAvK,GAAAC,QAAA,WAAAa,QAAA,kBAAA,gBAAAmH,EAAAuC,EAAAhJ,EAAA0I,GAGAlK,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,kBC7CA9G,EAAA,+BAAA,WAgMA,MA/LA2F,YAAA5B,OAAA6B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,wBAAAH,KAAA4K,iBACA5K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,0BAAAH,KAAA6K,mBACA7K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,mBAAAH,KAAA8K,YACA9K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,mBAAAH,KAAA+K,YACA/K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,mBAAAH,KAAAgL,YACAhL,KAAAC,SAAAC,EAAAC,QAAA,cAAA,gBAAAH,KAAAiL,SACAjL,KAAAC,SAAAC,EAAAC,QAAA,cAAA,gBAAAH,KAAAkL,SACAlL,KAAAC,SAAAC,EAAAC,QAAA,cAAA,gBAAAH,KAAAmL,UAGAP,gBAAA,SAAAjM,EAAAoH,GACA,GAAAgE,GAAAhE,EAAAH,UACAG,GAAAH,WAAAwF,OAAArF,EAMA,IAAArE,IACAsI,OAAA,YACAtI,MAAAgB,SAAA2I,4BACAnB,OAAA,UACAC,SAAA,WAGAC,GACAxE,WAAAmE,EAGA7J,GAAAC,QAAA,WAAAa,QAAA,kBAAA,kBAAA+E,EAAA,KAAArE,EAAA0I,GAGAlK,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,cAGA6J,kBAAA,SAAAlM,EAAAoH,GACAA,EAAAzF,IAAA,aAAAyF,EAAAxE,IAAA,eAGAuJ,WAAA,SAAAnM,EAAA2M,GACA,GAAA1F,GAAA0F,EAAA1F,UACA5F,MAAAuL,WAAAD,EAKA,IAAA5J,IACAsI,OAAA,mBACAtI,MAAAgB,SAAA8I,2BACAtB,OAAA,UACAC,SAAA,WAGAC,GACAxE,WAAAA,EAGA1F,GAAAC,QAAA,WAAAa,QAAA,kBAAA,aAAAsK,EAAA,KAAA5J,EAAA0I,IAGAW,WAAA,SAAApM,EAAA8M,GACA,GAAA7F,GAAA6F,EAAA7F,UACA5F,MAAAuL,WAAAE,EAKA,IAAA/J,IACAsI,OAAA,mBACAtI,MAAAgB,SAAAgJ,2BACAxB,OAAA,UACAC,SAAA,WAGAC,GACAxE,WAAAA,EAGA1F,GAAAC,QAAA,WAAAa,QAAA,kBAAA,aAAAyK,EAAA,KAAA/J,EAAA0I,IAGAY,WAAA,SAAArM,EAAAgN,GACA,GAAA/F,GAAA+F,EAAA/F,UACA5F,MAAAuL,WAAAI,EAKA,IAAAjK,IACAsI,OAAA,mBACAtI,MAAAgB,SAAAkJ,2BACA1B,OAAA,UACAC,SAAA,WAGAC,GACAxE,WAAAA,EAGA1F,GAAAC,QAAA,WAAAa,QAAA,kBAAA,aAAA2K,EAAA,KAAAjK,EAAA0I,IAIAmB,WAAA,SAAAM,GACAA,EAAAjG,WAAAwF,OAAAS,GAGA3L,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,cAGAiK,QAAA,SAAAtM,EAAAoH,GACA,GAAAuF,GAAAvF,EAAAxE,IAAA,QAAA8G,QAMA3G,GACAsI,OAAA,4BACAtI,MAAAgB,SAAAoJ,mCACA5B,OAAA,QACAC,SAAA,YAGAC,GACArE,eAAAA,EAGA7F,GAAAC,QAAA,WAAAa,QAAA,kBAAA,UAAAsK,EAAA,KAAA5J,EAAA0I,GAGAlK,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,cAGAkK,QAAA,SAAAvM,EAAAoH,GACA,GAAA0F,GAAA1F,EAAAxE,IAAA,QAAA8G,QAMA3G,GACAsI,OAAA,sBACAtI,MAAAgB,SAAAqJ,6BACA7B,OAAA,QACAC,SAAA,YAGAC,GACArE,eAAAA,EAGA7F,GAAAC,QAAA,WAAAa,QAAA,kBAAA,UAAAyK,EAAA,KAAA/J,EAAA0I,GAGAlK,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,cAGAmK,QAAA,SAAAxM,EAAAoH,GACA,GAAA4F,GAAA5F,EAAAxE,IAAA,QAAA8G,QAMA3G,GACAsI,OAAA,wBACAtI,MAAAgB,SAAAsJ,+BACA9B,OAAA,QACAC,SAAA,YAGAC,GACArE,eAAAA,EAGA7F,GAAAC,QAAA,WAAAa,QAAA,kBAAA,UAAA2K,EAAA,KAAAjK,EAAA0I,GAGAlK,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,kBC3LA9G,EAAA,sBAAA,WA6HA,MA5HA2F,YAAA5B,OAAA6B,QACAC,WAAA,WACAG,EAAAC,QAAA,WAAAyI,MAAA,oBAAA5I,KAAAiM,iBAAAjM,MACAE,EAAAC,QAAA,WAAAyI,MAAA,uBAAA5I,KAAAkM,oBAAAlM,MACAE,EAAAC,QAAA,WAAAyI,MAAA,eAAA5I,KAAAmM,YAAAnM,MACAE,EAAAC,QAAA,WAAAyI,MAAA,eAAA5I,KAAAoM,YAAApM,MACAE,EAAAC,QAAA,WAAAyI,MAAA,eAAA5I,KAAAqM,YAAArM,MACAE,EAAAC,QAAA,WAAAyI,MAAA,kBAAA5I,KAAAsM,eAAAtM,MACAE,EAAAC,QAAA,WAAAyI,MAAA,kBAAA5I,KAAAuM,eAAAvM,MACAE,EAAAC,QAAA,WAAAyI,MAAA,kBAAA5I,KAAAwM,eAAAxM,OAGAiM,iBAAA,SAAA/B,EAAAuC,GACA,GAAAtE,GAAA+B,EAAA3I,IAAA,QACA2I,GAAA3I,IAAA,QAEAqE,WAAAwF,OAAAjD,EAKA,IAAAuE,GAAAxM,EAAAC,QAAA,WAAAa,QAAA,kBACA2L,EAAAD,EAAAE,MAAA,SAAAC,GACA,UAAAA,EAAA1E,QAAA,KAAA0E,EAAAtL,IAAA,QAAAwE,gBAAA8G,EAAAtL,IAAA,QAAAwE,gBAAAoC,IAOAjH,GAAAkB,KAAAuK,EAAA,SAAAtM,GACAqM,EAAAtB,OAAA/K,KAGAL,KAAA8M,kBAAA5C,EAAAuC,IAGAP,oBAAA,SAAAhC,EAAAuC,GACA,GAAAtE,GAAA+B,EAAA3I,IAAA,QACA2I,GAAA3I,IAAA,QAEAqE,WAAAyC,IAAAF,GAEAnI,KAAA8M,kBAAA5C,EAAAuC,IAGAN,YAAA,SAAAjC,EAAAuC,GACA,GAAAnB,GAAApB,EAAA3I,IAAA,QACA2I,GAAA3I,IAAA,QAEAwE,eAAAxE,IAAA,QAAA6J,OAAAE,GAEAtL,KAAA8M,kBAAA5C,EAAAuC,IAGAL,YAAA,SAAAlC,EAAAuC,GACA,GAAAhB,GAAAvB,EAAA3I,IAAA,QACA2I,GAAA3I,IAAA,QAEAwE,eAAAxE,IAAA,QAAA6J,OAAAK,GAEAzL,KAAA8M,kBAAA5C,EAAAuC,IAGAJ,YAAA,SAAAnC,EAAAuC,GACA,GAAAd,GAAAzB,EAAA3I,IAAA,QACA2I,GAAA3I,IAAA,QAEAwE,eAAAxE,IAAA,QAAA6J,OAAAO,GAEA3L,KAAA8M,kBAAA5C,EAAAuC,IAGAH,eAAA,SAAApC,EAAAuC,GACA,GAAAnB,GAAApB,EAAA3I,IAAA,QACA2I,GAAA3I,IAAA,QAEAqE,WAAAyC,IAAAiD,GAEAtL,KAAA8M,kBAAA5C,EAAAuC,IAGAF,eAAA,SAAArC,EAAAuC,GACA,GAAAhB,GAAAvB,EAAA3I,IAAA,QACA2I,GAAA3I,IAAA,QAEAqE,WAAAyC,IAAAoD,GAEAzL,KAAA8M,kBAAA5C,EAAAuC,IAGAD,eAAA,SAAAtC,EAAAuC,GACA,GAAAd,GAAAzB,EAAA3I,IAAA,QACA2I,GAAA3I,IAAA,QAEAqE,WAAAyC,IAAAsD,GAEA3L,KAAA8M,kBAAA5C,EAAAuC,IAWAK,kBAAA,SAAA5C,EAAAuC,GACA,GAAAA,OAAA,KAAAA,GAAAA,CACA,KAAAA,EAAA,CAEAvM,EAAAC,QAAA,OAAAa,QAAA,YACA,IAAA0L,GAAAxM,EAAAC,QAAA,WAAAa,QAAA,iBACA0L,GAAAtB,OAAAlB,GACA,GAAAwC,EAAA7Q,SACAqE,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,uBCnHA9G,EAAA,4BAAA,WAgDA,MA/CA2F,YAAA5B,OAAA6B,QACAC,WAAA,WACAG,EAAAC,QAAA,uBAAAyI,MAAA,iBAAA5I,KAAA+M,kBACA7M,EAAAC,QAAA,mBAAAyI,MAAA,iBAAA5I,KAAAgN,cACA9M,EAAAC,QAAA,0BAAAyI,MAAA,iBAAA5I,KAAAiN,sBAGAF,iBAAA,SAAApL,EAAAoD,EAAA3H,GAcA,MATA,IAAAA,GAAAA,EAAAvB,OAAA,EACAuB,EAAA,UACA,GAAAA,GAAAA,EAAAvB,OAAA,EACAuB,EAAA,YACA,GAAAA,EAAAvB,SACAuB,EAAA,IAGAiF,SAAAC,MAAAnC,QAAA,OAAAa,QAAA,eAAA,+BACA5D,MAAAA,KAGA4P,aAAA,SAAArL,EAAAoD,EAAA3H,GACA,GAAAwG,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAW,GACAI,EAAA6B,EAAArC,IAAA,UAEA,OADAc,UAAAC,MAAAnC,QAAA,OAAAa,QAAA,eAAA,2BACAe,QAAAA,EAAA3E,MAAAA,KAGA6P,oBAAA,SAAAtL,EAAAoD,EAAA3H,GACA,GAAAwG,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAW,GACAI,EAAA6B,EAAArC,IAAA,WACAqD,EAAAvC,SAAAC,MAAAnC,QAAA,OAAAa,QAAA,eAAA,yBAOA,OALAe,GAAAwG,QACArH,EAAAkB,KAAA8K,gBAAA,SAAA9P,EAAAsE,GACAK,EAAAsG,KAAA3G,MAAAA,EAAAtE,MAAAA,MAGAwH,GAAA7C,QAAAA,EAAA3E,MAAAA,SC1CAlD,EAAA,iCAAA,WA2EA,MA1EA2F,YAAA5B,OAAA6B,QACAC,WAAA,WACAG,EAAAC,QAAA,uBAAAyI,MAAA,kBAAA5I,KAAAmN,wBACAjN,EAAAC,QAAA,wBAAAyI,MAAA,kBAAA5I,KAAAoN,0BACAlN,EAAAC,QAAA,yBAAAyI,MAAA,kBAAA5I,KAAAoN,0BACAlN,EAAAC,QAAA,mBAAAyI,MAAA,kBAAA5I,KAAAqN,qBAGAF,uBAAA,SAAA3K,GACA,OACA8K,IACA5L,MAAAgB,SAAA6K,kBACAnQ,MAAA,SAGAoQ,OACA9L,MAAAgB,SAAA+K,qBACArQ,MAAA,cAKAiQ,mBAAA,SAAA7K,GACA,OACAkL,KACAhM,MAAAgB,SAAAiL,2BACAvQ,MAAA,YAGAwQ,QACAlM,MAAAgB,SAAAmL,mCACAzQ,MAAA,iBAKAgQ,yBAAA,SAAA5K,EAAAD,GAQA,MAAA,YAAAA,GAAA,eAAAA,GAEAmL,KACAhM,MAAAgB,SAAAiL,2BACAvQ,MAAA,YAGAwQ,QACAlM,MAAAgB,SAAAmL,mCACAzQ,MAAA,iBAMAsQ,KACAhM,MAAAgB,SAAAiL,2BACAvQ,MAAA,SAGAwQ,QACAlM,MAAAgB,SAAAmL,mCACAzQ,MAAA,kBCnEAlD,EAAA,8BAAA,WAwDA,MAvDA2F,YAAA5B,OAAA6B,QACAC,WAAA,WACAG,EAAAC,QAAA,mBAAAyI,MAAA,eAAA5I,KAAA8N,iBACA5N,EAAAC,QAAA,qBAAAyI,MAAA,eAAA5I,KAAA+N,mBACA7N,EAAAC,QAAA,mBAAAyI,MAAA,eAAA5I,KAAAgO,iBACA9N,EAAAC,QAAA,iBAAAyI,MAAA,eAAA5I,KAAAiO,oBACA/N,EAAAC,QAAA,qBAAAyI,MAAA,eAAA5I,KAAAkO,oBAGAJ,gBAAA,SAAA/J,GACA7C,EAAApB,OAAAiE,GACAoK,eACAzM,MAAAgB,SAAA0L,yBACAhR,MAAA,iBAGAiR,iBACA3M,MAAAgB,SAAA4L,2BACAlR,MAAA,mBAGAmR,aACA7M,MAAAgB,SAAA8L,uBACApR,MAAA,eAGAqR,aACA/M,MAAAgB,SAAAgM,uBACAtR,MAAA,gBAMA,OAFA8D,GAAAqC,KAAAQ,EAAA,iBAKAgK,kBAAA,SAAAhK,GACA,MAAA7C,GAAAqC,KAAAQ,GAAA,eAAA,eAAA,oBAGAiK,gBAAA,SAAAjK,GACA,MAAA7C,GAAAqC,KAAAQ,GAAA,eAAA,oBAGAkK,mBAAA,SAAAlK,GACA,MAAA7C,GAAAqC,KAAAQ,GAAA,eAAA,eAAA,oBAGAmK,kBAAA,SAAAnK,GACA,MAAA7C,GAAAqC,KAAAQ,GAAA,eAAA,wBCtDA7J,EAAA,+BAAA,sBAAA,SAAAyU,GAWA,MAVA9O,YAAA5B,OAAA6B,QACAC,WAAA,WACAG,EAAAC,QAAA,qBAAAyI,MAAA,uBAAA5I,KAAA4O,oBAAA5O,OAGA4O,oBAAA,WACA,MAAAD,QCPAzU,EAAA,iCAAA,WAuBA,MAtBA2F,YAAA5B,OAAA6B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAA6O,0BACA7O,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAA6O,0BACA7O,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAA6O,2BAGAA,yBAAA,SAAAhD,GAEAA,EAAA5L,SAAAC,EAAAC,QAAA,OAAA,mBAAAH,KAAA8O,UAAAjD,IAGAiD,UAAA,SAAAlL,EAAAmL,EAAAhG,GACA,GAAAiG,GAAAD,EAAAE,oBAAA,IACAC,EAAAH,EAAAxN,IAAA,MAEAvB,MAAAuB,IAAA,QAAAyN,GAAAhP,KAAAmP,MAAAJ,EAAAI,KACAnP,KAAAM,IAAA,MAAA4O,QClBAhV,EAAA,sCAAA,yBAAA,SAAAyP,GAiBA,MAhBA9J,YAAA5B,OAAA6B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,WAAA,mBAAAH,KAAAoP,yBAGAA,uBAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA9N,IAAA,aACA+N,IAEA,GAAAA,YAAAjN,UAAA2G,OACAqG,EAAA/O,IAAA,aAAA,GAAAqJ,GAAA2F,IAFAD,EAAA/O,IAAA,aAAA,GAAAqJ,SCTAzP,EAAA,yBAAA,WAmBA,MAlBA2F,YAAA5B,OAAA6B,QACAqC,WAEApC,WAAA,WACAG,EAAAC,QAAA,cAAAyI,MAAA,kBAAA5I,KAAAuP,UAAAvP,MACAE,EAAAC,QAAA,cAAAyI,MAAA,mBAAA5I,KAAAwP,WAAAxP,OAGAuP,UAAA,SAAAvQ,GACAgB,KAAAmC,QAAArF,KAAAkC,IAGAwQ,WAAA,WACA,MAAAxP,MAAAmC,aCdAjI,EAAA,+BACA,8BACA,8BACA,6BACA,qBACA,2BACA,6BACA,4BACA,mBAEA,yBACA,8BACA,2BACA,8BACA,8BACA,qCACA,uBAEA,SAEAuV,EACAC,EACAC,EACAhB,EACAiB,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAqBA,MAnBAzQ,YAAA5B,OAAA6B,QACAC,WAAA,WACA,GAAA0P,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAEA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,OAOA,IAAApQ,GAAAmC,SAAAC,KChEArI,IAAA,8BAAA,8BAAA,SAAAsW,EAAAZ,IAyBA,IAvBA9P,WAAA2Q,YAAA1Q,QAEAC,WAAA,SAAAgC,GACA/B,KAAAC,SAAAC,EAAAC,QAAA,OAAA,iBAAAH,KAAAyQ,cAGAC,QAAA,WACA,GAAAH,IAGAE,YAAA,SAAAE,GAIA,GAAArB,GAAApP,EAAAC,QAAA,YAAAa,QAAA,cAAA,eAEA,GAAAsO,YAAAjN,UAAA+G,aACAkG,EAAA,GAAAK,GAAAL,GACApP,EAAAC,QAAA,YAAAa,QAAA,iBAAA,aAAAsO,GAAA,SAMAsB,UAEA1W,EAAA,OAAA","file":"builder.js","sourcesContent":["(function () {\n","/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Adds template helpers for the fields conditional logic setting type\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/templateHelpers',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:model', this.addTemplateHelpers );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:thenModel', this.addTemplateHelpers );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:whenModel', this.addTemplateHelpers );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:elseModel', this.addTemplateHelpers );\n\t\t\t\n\t\t},\n\n\t\taddTemplateHelpers: function( model ) {\n\t\t\tmodel.set( 'renderKeySelect', this.renderKeySelect );\n\t\t\tmodel.set( 'renderComparators', this.renderComparators );\n\t\t\tmodel.set( 'renderTriggers', this.renderTriggers );\n\t\t\tmodel.set( 'renderWhenValue', this.renderWhenValue );\n\t\t\tmodel.set( 'renderItemValue', this.renderItemValue );\n\t\t},\n\n\t\trenderKeySelect: function( currentValue, modelType ) {\n\t\t\t\n\t\t\tvar groups = []\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tvar fieldOptions = _.chain( fieldCollection.models )\n\t\t\t\t.filter( function( field ) { return ! nfRadio.channel( 'conditions-key-select-field-' + field.get( 'type' ) ).request( 'hide', modelType ) || false; })\n\t\t\t\t.filter( function( field )  {\n\n\t\t\t\t\t// filter out these fields for the when condition\n\t\t\t\t\tvar notForWhen = [ 'submit', 'hr', 'html', 'save', 'file-upload', 'password', 'passwordconfirm', 'product' ];\n\t\t\t\t\t\n\t\t\t\t\tif( field.get( 'key' ) === currentValue ) {\n\t\t\t\t\t\tnotForWhen = notForWhen.splice( notForWhen.indexOf( field.get( 'type' ), 1) );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( notForWhen.includes( field.get( 'type' ) ) && 'when' === modelType ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.map( function( field ) {\n                    var label = field.get( 'label' )\n\t\t\t\t\tif( 'undefined' !== typeof field.get( 'admin_label' ) && 0 < field.get( 'admin_label' ).length ){\n                    \tlabel = field.get( 'admin_label' );\n\t\t\t\t\t}\n\t\t\t\t\treturn { key: field.get( 'key' ), label: label }; }\n\t\t\t\t)\n\t\t\t\t.sortBy( function( field ){\n\t\t\t\t\treturn field.label.toLowerCase();\n\t\t\t\t} )\n\t\t\t\t.value();\n\t\t\t\t\n\t\t\tgroups.push( { label: 'Fields', type: 'field', options: fieldOptions } );\n\t\t\t\n\t\t\tvar calcCollection = nfRadio.channel( 'settings' ).request( 'get:setting', 'calculations' );\n\n\t\t\t/*\n\t\t\t * If we are working on a 'when' model and we have calculations, add them to our select options.\n\t\t\t */\n\t\t\tif ( 'when' == modelType && 0 < calcCollection.length ) {\n\t\t\t\tvar calcOptions = calcCollection.map( function( calc ) {\n\t\t\t\t\treturn { key: calc.get( 'name' ), label: calc.get( 'name' ) };\n\t\t\t\t} );\n\n\t\t\t\tgroups.push( { label: 'Calculations', type: 'calc', options: calcOptions } );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Pass our groups through any 'when/then' group filters we have.\n\t\t\t */\n\t\t\tvar filters = nfRadio.channel( 'conditions' ).request( 'get:groupFilters' );\n\t\t\t_.each( filters, function( filter ) {\n\t\t\t\tgroups = filter( groups, modelType );\n\t\t\t} );\n\n\t\t\t/*\n\t\t\t * Use a template to get our field select\n\t\t\t */\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-key-select' );\n\n\t\t\tvar tmp = template( { groups: groups, currentValue: currentValue } );\n\t\t\treturn tmp;\n\t\t},\n\n\t\trenderComparators: function( type, key, currentComparator ) {\n\t\t\tvar defaultComparators = {\n\t\t\t\tequal: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperEquals,\n\t\t\t\t\tvalue: 'equal'\n\t\t\t\t},\n\n\t\t\t\tnotequal: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperDoesNotEqual,\n\t\t\t\t\tvalue: 'notequal'\n\t\t\t\t},\n\n\t\t\t\tcontains: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperContains,\n\t\t\t\t\tvalue: 'contains'\n\t\t\t\t},\n\n\t\t\t\tnotcontains: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperDoesNotContain,\n\t\t\t\t\tvalue: 'notcontains'\n\t\t\t\t},\n\n\t\t\t\tgreater: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperGreaterThan,\n\t\t\t\t\tvalue: 'greater'\n\t\t\t\t},\n\n\t\t\t\tless: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperLessThan,\n\t\t\t\t\tvalue: 'less'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( key ) {\n\t\t\t\t/*\n\t\t\t\t * This could be a field or a calculation key. If it's a calc key, get the calc model.\n\t\t\t\t */\n\t\t\t\tif ( 'calc' == type ) {\n\t\t\t\t\tvar comparators = _.omit( defaultComparators, 'contains', 'notcontains' );\n\t\t\t\t\t_.extend( comparators, {\n\t\t\t\t\t\tlessequal: {\n\t\t\t\t\t\t\tlabel: nfcli18n.templateHelperLessThanOrEqual,\n\t\t\t\t\t\t\tvalue: 'lessequal'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tgreaterequal: {\n\t\t\t\t\t\t\tlabel: nfcli18n.templateHelperGreaterThanOrEqual,\n\t\t\t\t\t\t\tvalue: 'greaterequal'\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * Send out a radio request for an html value on a channel based upon the field type.\n\t\t\t\t\t *\n\t\t\t\t\t * Get our field by key\n\t\t\t\t\t * Get our field type model\n\t\t\t\t\t *\n\t\t\t\t\t * Send out a message on the type channel\n\t\t\t\t\t * If we don't get a response, send a message out on the parent type channel\n\t\t\t\t\t */\n\t\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\n\n\t\t\t\t\tif( fieldModel ) {\n\t\t\t\t\t\tvar comparators = nfRadio.channel('conditions-' + fieldModel.get('type')).request('get:comparators', defaultComparators, currentComparator );\n\t\t\t\t\t\tif (!comparators) {\n\t\t\t\t\t\t\tvar typeModel = nfRadio.channel('fields').request('get:type', fieldModel.get('type'));\n\t\t\t\t\t\t\tcomparators = nfRadio.channel('conditions-' + typeModel.get('parentType')).request('get:comparators', defaultComparators, currentComparator ) || defaultComparators;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar comparators = defaultComparators;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar comparators = defaultComparators;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Use a template to get our comparator select\n\t\t\t */\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-comparators' );\n\t\t\treturn template( { comparators: comparators, currentComparator: currentComparator } );\n\t\t},\n\n\t\trenderTriggers: function( type, key, currentTrigger, value ) {\n\t\t\tvar defaultTriggers = {\n\t\t\t\tshow_field: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperShowField,\n\t\t\t\t\tvalue: 'show_field'\n\t\t\t\t},\n\n\t\t\t\thide_field: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperHideField,\n\t\t\t\t\tvalue: 'hide_field'\n\t\t\t\t},\n\n\t\t\t\tchange_value: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperChangeValue,\n\t\t\t\t\tvalue: 'change_value'\n\t\t\t\t},\n\n\t\t\t\tset_required: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperSetRequired,\n\t\t\t\t\tvalue: 'set_required'\n\t\t\t\t},\n\n\t\t\t\tunset_required: {\n\t\t\t\t\tlabel: nfcli18n.templateHelperUnsetRequired,\n\t\t\t\t\tvalue: 'unset_required'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( key && 'field' == type ) {\n\t\t\t\t/*\n\t\t\t\t * Send out a radio request for an html value on a channel based upon the field type.\n\t\t\t\t *\n\t\t\t\t * Get our field by key\n\t\t\t\t * Get our field type model\n\t\t\t\t *\n\t\t\t\t * Send out a message on the type channel\n\t\t\t\t * If we don't get a response, send a message out on the parent type channel\n\t\t\t\t */\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\n\n\t\t\t\tif( 'undefined' != typeof fieldModel ) {\n\t\t\t\t\tvar typeModel = nfRadio.channel('fields').request('get:type', fieldModel.get('type'));\n\n\t\t\t\t\tvar triggers = nfRadio.channel('conditions-' + fieldModel.get('type')).request('get:triggers', defaultTriggers);\n\t\t\t\t\tif (!triggers) {\n\t\t\t\t\t\ttriggers = nfRadio.channel('conditions-' + typeModel.get('parentType')).request('get:triggers', defaultTriggers) || defaultTriggers;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar triggers = nfRadio.channel( 'conditions-' + type ).request( 'get:triggers', defaultTriggers ) || defaultTriggers;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar triggers = nfRadio.channel( 'conditions-' + type ).request( 'get:triggers', defaultTriggers ) || defaultTriggers;\n\t\t\t}\n\n\n\t\t\t/*\n\t\t\t * Use a template to get our comparator select\n\t\t\t */\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-triggers' );\n\t\t\treturn template( { triggers: triggers, currentTrigger: currentTrigger } );\n\t\t},\n\n\t\trenderWhenValue: function( type, key, comparator, value ) {\n\t\t\t/*\n\t\t\t * Use a template to get our value\n\t\t\t */\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-default' );\n\t\t\tvar defaultHTML = template( { value: value } );\n\n\t\t\t/*\n\t\t\t * If we have a key and it's not a calc, get our field type based HTML.\n\t\t\t */\n\t\t\tif ( key && 'calc' != type ) {\n\t\t\t\t/*\n\t\t\t\t * Send out a radio request for an html value on a channel based upon the field type.\n\t\t\t\t *\n\t\t\t\t * Get our field by key\n\t\t\t\t * Get our field type model\n\t\t\t\t *\n\t\t\t\t * Send out a message on the type channel\n\t\t\t\t * If we don't get a response, send a message out on the parent type channel\n\t\t\t\t */\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\n\n\t\t\t\tif( fieldModel ) {\n\t\t\t\t\tvar html = nfRadio.channel('conditions-' + fieldModel.get('type')).request('get:valueInput', key, comparator, value);\n\t\t\t\t\tif (!html) {\n\t\t\t\t\t\tvar typeModel = nfRadio.channel('fields').request('get:type', fieldModel.get('type'));\n\t\t\t\t\t\thtml = nfRadio.channel('conditions-' + typeModel.get('parentType')).request('get:valueInput', key, comparator, value) || defaultHTML;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thtml = defaultHTML;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar html = defaultHTML;\n\t\t\t}\n\t\t\t\n\t\t\treturn html;\n\t\t},\n\n\t\trenderItemValue: function( key, trigger, value ) {\n\t\t\t/*\n\t\t\t * Use a template to get our value\n\t\t\t *\n\t\t\t * TODO: This should be much more dynamic.\n\t\t\t * At the moment, we manually check to see if we are doing a \"change_value\" or similar trigger.\n\t\t\t */\n\t\t\tif ( trigger != 'change_value'\n\t\t\t\t&& trigger != 'select_option'\n\t\t\t\t&& trigger != 'deselect_option'\n\t\t\t\t&& trigger != 'show_option'\n\t\t\t\t&& trigger != 'hide_option' \n\t\t\t) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-default' );\n\t\t\tvar defaultHTML = template( { value: value } );\n\n\t\t\tif ( key ) {\n\t\t\t\t/*\n\t\t\t\t * Send out a radio request for an html value on a channel based upon the field type.\n\t\t\t\t *\n\t\t\t\t * Get our field by key\n\t\t\t\t * Get our field type model\n\t\t\t\t *\n\t\t\t\t * Send out a message on the type channel\n\t\t\t\t * If we don't get a response, send a message out on the parent type channel\n\t\t\t\t */\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\n\n\t\t\t\tif( 'undefined' != typeof fieldModel ) {\n\t\t\t\t\tvar typeModel = nfRadio.channel('fields').request('get:type', fieldModel.get('type'));\n\t\t\t\t\tvar html = nfRadio.channel('conditions-' + fieldModel.get('type')).request('get:valueInput', key, trigger, value);\n\t\t\t\t\tif (!html) {\n\t\t\t\t\t\thtml = nfRadio.channel('conditions-' + typeModel.get('parentType')).request('get:valueInput', key, trigger, value) || defaultHTML;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar html = defaultHTML;\n\t\t\t}\n\n\t\t\treturn html;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Item view for our condition and\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/whenItem',[], function( ) {\n\tvar view = Marionette.ItemView.extend({\n\t\ttemplate: \"#tmpl-nf-cl-advanced-when-item\",\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\t\t},\n\t\t\n\t\tevents: {\n\t\t\t'change .setting': 'changeSetting',\n\t\t\t'click .nf-remove-when': 'clickRemove'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\n\t\t},\n\n\t\tclickRemove: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeWhen', e, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Item view for our condition's first when\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/firstWhenItem',[], function( ) {\n\tvar view = Marionette.ItemView.extend({\n\t\ttemplate: \"#tmpl-nf-cl-advanced-first-when-item\",\n\t\t\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeSetting'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view for our when collection\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/whenCollection',[ 'views/advanced/whenItem', 'views/advanced/firstWhenItem' ], function( WhenItem, FirstWhenItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tgetChildView: function( item ) {\n\t\t\tif ( item.collection.first() == item ) {\n\t\t\t\treturn FirstWhenItem;\n\t\t\t} else {\n\t\t\t\treturn WhenItem;\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.firstWhenDiv = options.firstWhenDiv;\n\t\t\tthis.conditionModel = options.conditionModel;\n\t\t},\n\n    \t// The default implementation:\n\t  \tattachHtml: function( collectionView, childView, index ) {\n\t\t  \tif ( 0 == index ) {\n\t\t  \t\tthis.firstWhenDiv.append( childView.el );\n\t\t  \t} else {\n\t\t  \t\tif ( ! this.conditionModel.get( 'collapsed' ) ) {\n\t\t\t\t    if (collectionView.isBuffering) {\n\t\t\t\t    \t// buffering happens on reset events and initial renders\n\t\t\t\t    \t// in order to reduce the number of inserts into the\n\t\t\t\t    \t// document, which are expensive.\n\t\t\t\t    \tcollectionView._bufferedChildren.splice(index, 0, childView);\n\t\t\t\t    } else {\n\t\t\t\t\t\t// If we've already rendered the main collection, append\n\t\t\t\t\t\t// the new child into the correct order if we need to. Otherwise\n\t\t\t\t\t\t// append to the end.\n\t\t\t\t\t\tif (!collectionView._insertBefore(childView, index)){\n\t\t\t\t\t\t\tcollectionView._insertAfter(childView);\n\t\t\t\t\t\t}\n\t\t\t\t    }\t\t\t  \t\t\t\n\t\t  \t\t}\n\t\t  \t}\n\t  \t},\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Item view for our condition then\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/thenItem',[], function( ) {\n\tvar view = Marionette.ItemView.extend({\n\t\ttemplate: \"#tmpl-nf-cl-trigger-item\",\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeSetting',\n\t\t\t'click .nf-remove-then': 'clickRemove'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model );\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:then', e, this.model );\n\t\t},\n\n\t\tclickRemove: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeThen', e, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view for our then statements\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/thenCollection',[ 'views/advanced/thenItem' ], function( ThenItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: ThenItem,\n\n\t\tinitialize: function( options ) {\n\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Item view for our condition then\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/elseItem',[], function( ) {\n\tvar view = Marionette.ItemView.extend({\n\t\ttemplate: \"#tmpl-nf-cl-trigger-item\",\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeSetting',\n\t\t\t'click .nf-remove-else': 'clickRemove'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\n\t\t},\n\n\t\tclickRemove: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeElse', e, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view for our else statements\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/elseCollection',[ 'views/advanced/elseItem' ], function( ElseItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: ElseItem,\n\n\t\tinitialize: function( options ) {\n\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Layout view for our conditions\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/conditionItem',[ 'views/advanced/whenCollection', 'views/advanced/thenCollection', 'views/advanced/elseCollection' ], function( WhenCollectionView, ThenCollectionView, ElseCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttemplate: \"#tmpl-nf-cl-advanced-condition\",\n\t\tregions: {\n\t\t\t'when': '.nf-when-region',\n\t\t\t'then': '.nf-then-region',\n\t\t\t'else': '.nf-else-region'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * When we change the \"collapsed\" attribute of our model, re-render.\n\t\t\t */\n\t\t\tthis.listenTo( this.model, 'change:collapsed', this.render );\n\n\t\t\t/*\n\t\t\t * When our drawer closes, send out a radio message on our setting type channel.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.drawerClosed );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar firstWhenDiv = jQuery( this.el ).find( '.nf-first-when' );\n\t\t\tthis.when.show( new WhenCollectionView( { collection: this.model.get( 'when' ), firstWhenDiv: firstWhenDiv, conditionModel: this.model } ) );\n\t\t\tif ( ! this.model.get( 'collapsed' ) ) {\n\t\t\t\tthis.then.show( new ThenCollectionView( { collection: this.model.get( 'then' ) } ) );\n\t\t\t\tthis.else.show( new ElseCollectionView( { collection: this.model.get( 'else' ) } ) );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-remove-condition': 'clickRemove',\n\t\t\t'click .nf-collapse-condition': 'clickCollapse',\n\t\t\t'click .nf-add-when': 'clickAddWhen',\n\t\t\t'click .nf-add-then': 'clickAddThen',\n\t\t\t'click .nf-add-else': 'clickAddElse'\n\t\t},\n\n\t\tclickRemove: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeCondition', e, this.model );\n\t\t},\n\n\t\tclickCollapse: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:collapseCondition', e, this.model );\n\t\t},\n\n\t\tclickAddWhen: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addWhen', e, this.model );\n\t\t},\n\n\t\tclickAddThen: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addThen', e, this.model );\n\t\t},\n\n\t\tclickAddElse: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addElse', e, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view for our conditions\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/advanced/conditionCollection',[ 'views/advanced/conditionItem' ], function( conditionItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: conditionItem,\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.collection = options.dataModel.get( 'conditions' );\n\t\t},\n\n        onShow: function() {\n            /*\n             * If we don't have any conditions, add an empty one as we render.\n             */\n            if ( 0 == this.collection.length ) {\n                this.collection.add( {} );\n            }\n        },\n\n        onBeforeDestroy: function() {\n            /*\n             * If we don't have any conditions or we have more than one, just return.\n             */\n            if ( 0 == this.collection.length || 1 < this.collection.length ) return;\n            /*\n             * If we only have one condition, and we didn't change the \"key\" attribute, reset our collection.\n             * This empties it.\n             */\n            if ( '' == this.collection.models[0].get( 'when' ).models[0].get( 'key' ) ) {\n                this.collection.reset();\n            }\n        }\n\t});\n\n\treturn view;\n} );\n\n","/**\n * Item view for our condition and\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/whenItem',[], function( ) {\n\tvar view = Marionette.ItemView.extend({\n\t\ttemplate: \"#tmpl-nf-cl-actions-condition-when\",\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\t\t},\n\t\t\n\t\tevents: {\n\t\t\t'change .setting': 'changeSetting',\n\t\t\t'click .nf-remove-when': 'clickRemove'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\n\t\t},\n\n\t\tclickRemove: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeWhen', e, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view for our when collection\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/whenCollection',[ 'views/actions/whenItem' ], function( WhenItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: WhenItem,\n\n\t\tinitialize: function( options ) {\n\n\t\t},\n\n        onShow: function() {\n            /*\n             * If we don't have any conditions, add an empty one as we render.\n             */\n            if ( 0 == this.collection.length ) {\n                this.collection.add( {} );\n            }\n        },\n\n        onBeforeDestroy: function() {\n            /*\n             * If we don't have any conditions or we have more than one, just return.\n             */\n            if ( 0 == this.collection.length || 1 < this.collection.length ) return;\n            /*\n             * If we only have one condition, and we didn't change the \"key\" attribute, reset our collection.\n             * This empties it.\n             */\n            if ( '' == this.collection.models[0].get( 'key' ) ) {\n                this.collection.reset();\n            }\n        }\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Layout view for our Action condition\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/conditionLayout',[ 'views/actions/whenCollection' ], function( WhenCollection ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#tmpl-nf-cl-actions-condition-layout',\n\n\t\tregions: {\n\t\t\t'when': '.nf-when'\n\t\t},\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.model = options.dataModel.get( 'conditions' );\n\t\t\tif ( ! options.dataModel.get( 'conditions' ) ) return;\n\n\t\t\tthis.collection = options.dataModel.get( 'conditions' ).get( 'when' );\n\t\t\tthis.conditionModel = options.dataModel.get( 'conditions' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( ! this.collection ) return;\n\t\t\t/*\n\t\t\t * Show our \"when\" collection in the \"when\" area.\n\t\t\t */\n\t\t\tthis.when.show( new WhenCollection( { collection: this.collection } ) );\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .condition-setting': 'changeSetting',\n\t\t\t'click .nf-add-when': 'clickAddWhen'\n\t\t},\n\n\t\tclickAddWhen: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addWhen', e, this.model );\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Returns the childview we need to use for our conditional logic form settings.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/returnChildView',[ 'views/advanced/conditionCollection', 'views/actions/conditionLayout' ], function( AdvancedView, ActionsView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'advanced_conditions' ).reply( 'get:settingChildView', this.getAdvancedChildView );\n\t\t\tnfRadio.channel( 'action_conditions' ).reply( 'get:settingChildView', this.getActionChildView );\n\t\t},\n\n\t\tgetAdvancedChildView: function( settingModel ) {\n\t\t\treturn AdvancedView;\n\t\t},\n\n\t\tgetActionChildView: function( settingModel ) {\n\t\t\treturn ActionsView;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * When Model\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/whenModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tconnector: 'AND',\n\t\t\tkey: '',\n\t\t\tcomparator: '',\n\t\t\tvalue: '',\n\t\t\ttype: 'field',\n\t\t\tmodelType: 'when'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'init:whenModel', this );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * When Collection\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/whenCollection',['models/whenModel'], function( WhenModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: WhenModel,\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Then Model\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/thenModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tkey: '',\n\t\t\ttrigger: '',\n\t\t\tvalue: '',\n\t\t\ttype: 'field',\n\t\t\tmodelType: 'then'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'init:thenModel', this );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Then Collection\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/thenCollection',['models/thenModel'], function( ThenModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: ThenModel,\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Else Model\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/elseModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tkey: '',\n\t\t\ttrigger: '',\n\t\t\tvalue: '',\n\t\t\ttype: 'field',\n\t\t\tmodelType: 'else'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'init:elseModel', this );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Else Collection\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/elseCollection',['models/elseModel'], function( ElseModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: ElseModel,\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Conditon Model\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/conditionModel',[ 'models/whenCollection', 'models/thenCollection', 'models/elseCollection' ], function( WhenCollection, ThenCollection, ElseCollection ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tcollapsed: false,\n\t\t\tprocess: 1,\n\t\t\tconnector: 'all',\n\t\t\twhen: [ {} ],\n\t\t\tthen: [ {} ],\n\t\t\telse: []\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.set( 'when', new WhenCollection( this.get( 'when' ), { conditionModel: this } ) );\n\t\t\tthis.set( 'then', new ThenCollection( this.get( 'then' ), { conditionModel: this } ) );\n\t\t\tthis.set( 'else', new ElseCollection( this.get( 'else' ), { conditionModel: this } ) );\n\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'init:model', this );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Conditon Collection\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/conditionCollection',['models/conditionModel'], function( ConditionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: ConditionModel,\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Item view for our drawer header\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerHeader',[], function( ) {\n\tvar view = Marionette.ItemView.extend({\n\t\ttemplate: \"#tmpl-nf-cl-advanced-drawer-header\",\n\n\t\tevents: {\n\t\t\t'click .nf-add-new': 'clickAddNew'\n\t\t},\n\n\t\tclickAddNew: function( e ) {\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addNew', e );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Adds a new condition when the add new button is clicked.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/newCondition',[ 'models/whenCollection', 'models/whenModel' ], function( WhenCollection, WhenModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:addNew', this.addNew );\n\t\t},\n\n\t\taddNew: function( e ) {\n\t\t\tvar conditionCollection = nfRadio.channel( 'settings' ).request( 'get:setting', 'conditions' );\n\t\t\tvar conditionModel = conditionCollection.add( {} );\n\n\t\t\t// Add our condition addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition',\n\t\t\t\tlabel: nfcli18n.newConditionCondition,\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: conditionCollection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addCondition', conditionModel, null, label, data );\n\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Updates condition settings on field change or drawer close\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/updateSettings',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'change:setting', this.updateSetting );\n\t\t},\n\n\t\tupdateSetting: function( e, dataModel ) {\n\t\t\tvar value = jQuery( e.target ).val();\n\t\t\tvar id = jQuery( e.target ).data( 'id' );\n\t\t\tvar before = dataModel.get( id );\n\n\t\t\tif ( jQuery( e.target ).find( ':selected' ).data( 'type' ) ) {\n\t\t\t\tdataModel.set( 'type', jQuery( e.target ).find( ':selected' ).data( 'type' ) );\n\t\t\t}\n\n\t\t\tdataModel.set( id, value );\n\n\t\t\tvar after = value;\n\n\t\t\tvar changes = {\n\t\t\t\tattr: id,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * The \"Advanced\" domain uses a collection of conditions, while the \"Actions\" domain uses a single collection.\n\t\t\t * Here, if we don't have a collection property, then dataModel must be our conditionModel.\n\t\t\t */\n\t\t\tvar conditionModel = ( 'undefined' == typeof dataModel.collection ) ? dataModel : dataModel.collection.options.conditionModel;\n\n\t\t\tvar data = {\n\t\t\t\tconditionModel: conditionModel\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition',\n\t\t\t\tlabel: 'Condition',\n\t\t\t\tchange: 'Changed ' + id + ' from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label, data );\n\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for clicks on our different condition controls\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/clickControls',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:removeCondition', this.removeCondition );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:collapseCondition', this.collapseCondition );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:removeWhen', this.removeWhen );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:removeThen', this.removeThen );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:removeElse', this.removeElse );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:addWhen', this.addWhen );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:addThen', this.addThen );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:addElse', this.addElse );\n\t\t},\n\n\t\tremoveCondition: function( e, conditionModel ) {\n\t\t\tvar conditionCollection = conditionModel.collection;\n\t\t\tconditionModel.collection.remove( conditionModel );\n\n\t\t\t/*\n\t\t\t * Register our remove condition event with our changes manager\n\t\t\t */\n\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition',\n\t\t\t\tlabel: nfcli18n.clickControlsConditionlabel,\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: conditionCollection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeCondition', conditionModel, null, label, data );\n\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\tcollapseCondition: function( e, conditionModel ) {\n\t\t\tconditionModel.set( 'collapsed', ! conditionModel.get( 'collapsed' ) );\n\t\t},\n\n\t\tremoveWhen: function( e, whenModel ) {\n\t\t\tvar collection = whenModel.collection;\n\t\t\tthis.removeItem( whenModel );\n\t\t\t/*\n\t\t\t * Register our remove when change.\n\t\t\t */\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition - When',\n\t\t\t\tlabel: nfcli18n.clickControlsConditionWhen,\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: collection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeWhen', whenModel, null, label, data );\n\t\t},\n\n\t\tremoveThen: function( e, thenModel ) {\n\t\t\tvar collection = thenModel.collection;\n\t\t\tthis.removeItem( thenModel );\n\t\t\t/*\n\t\t\t * Register our remove then change.\n\t\t\t */\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition - Then',\n\t\t\t\tlabel: nfcli18n.clickControlsConditionThen,\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: collection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeThen', thenModel, null, label, data );\n\t\t},\n\n\t\tremoveElse: function( e, elseModel ) {\n\t\t\tvar collection = elseModel.collection;\n\t\t\tthis.removeItem( elseModel );\n\t\t\t/*\n\t\t\t * Register our remove else change.\n\t\t\t */\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition - Else',\n\t\t\t\tlabel: nfcli18n.clickControlsConditionElse,\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: collection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeElse', elseModel, null, label, data );\n\t\t\t\n\t\t},\n\n\t\tremoveItem: function( itemModel ) {\n\t\t\titemModel.collection.remove( itemModel );\n\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\taddWhen: function( e, conditionModel ) {\n\t\t\tvar whenModel = conditionModel.get( 'when' ).add( {} );\n\n\t\t\t/*\n\t\t\t * Register our add when as a change.\n\t\t\t */\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition - When Criteron',\n\t\t\t\tlabel: nfcli18n.clickControlsConditionWhenCriteron,\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tconditionModel: conditionModel\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addWhen', whenModel, null, label, data );\n\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\taddThen: function( e, conditionModel ) {\n\t\t\tvar thenModel = conditionModel.get( 'then' ).add( {} );\n\n\t\t\t/*\n\t\t\t * Register our add then as a change.\n\t\t\t */\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition - Do Item',\n\t\t\t\tlabel: nfcli18n.clickControlsConditionDoItem,\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tconditionModel: conditionModel\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addThen', thenModel, null, label, data );\n\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\taddElse: function( e, conditionModel ) {\n\t\t\tvar elseModel = conditionModel.get( 'else' ).add( {} );\n\n\t\t\t/*\n\t\t\t * Register our add when as a change.\n\t\t\t */\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: 'Condition - Else Item',\n\t\t\t\tlabel: nfcli18n.clickControlsConditionElseItem,\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tconditionModel: conditionModel\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addElse', elseModel, null, label, data );\n\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles undoing everything for conditions.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/undo',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addCondition', this.undoAddCondition, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeCondition', this.undoRemoveCondition, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addWhen', this.undoAddWhen, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addThen', this.undoAddThen, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addElse', this.undoAddElse, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeWhen', this.undoRemoveWhen, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeThen', this.undoRemoveThen, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeElse', this.undoRemoveElse, this );\n\t\t},\n\n\t\tundoAddCondition: function( change, undoAll ) {\n\t\t\tvar dataModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\t\n\t\t\tdata.collection.remove( dataModel );\n\n\t\t\t/*\n\t\t\t * Loop through our change collection and remove any setting changes that belong to the condition we've added.\n\t\t\t */\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\tvar results = changeCollection.where( function( changeModel ) {\n\t\t\t\tif ( ( changeModel = dataModel ) || 'undefined' != typeof changeModel.get( 'data' ).conditionModel && changeModel.get( 'data' ).conditionModel == dataModel ) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t_.each( results, function( model ) {\n\t\t\t\tchangeCollection.remove( model );\n\t\t\t} );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveCondition: function( change, undoAll ) {\n\t\t\tvar dataModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\t\n\t\t\tdata.collection.add( dataModel );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoAddWhen: function( change, undoAll ) {\n\t\t\tvar whenModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\t\n\t\t\tdata.conditionModel.get( 'when' ).remove( whenModel );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoAddThen: function( change, undoAll ) {\n\t\t\tvar thenModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\t\n\t\t\tdata.conditionModel.get( 'then' ).remove( thenModel );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoAddElse: function( change, undoAll ) {\n\t\t\tvar elseModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\t\n\t\t\tdata.conditionModel.get( 'else' ).remove( elseModel );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveWhen: function( change, undoAll ) {\n\t\t\tvar whenModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\t\n\t\t\tdata.collection.add( whenModel );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveThen: function( change, undoAll ) {\n\t\t\tvar thenModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\t\n\t\t\tdata.collection.add( thenModel );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveElse: function( change, undoAll ) {\n\t\t\tvar elseModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\t\n\t\t\tdata.collection.add( elseModel );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\n\t\t * @return void\n\t\t */\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\n\t\t\tif ( ! undoAll ) {\n\t\t\t\t// Update preview.\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tchangeCollection.remove( change );\n\t\t\t\tif ( 0 == changeCollection.length ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Returns the type of input value we'd like to use.\n * This covers all the core field types.\n *\n * Add-ons can copy this code structure in order to get custom \"values\" for conditions.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/coreValues',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'conditions-checkbox' ).reply( 'get:valueInput', this.getCheckboxValue );\n\t\t\tnfRadio.channel( 'conditions-list' ).reply( 'get:valueInput', this.getListValue );\n\t\t\tnfRadio.channel( 'conditions-listcountry' ).reply( 'get:valueInput', this.getListCountryValue );\n\t\t},\n\n\t\tgetCheckboxValue: function( key, trigger, value ) {\n\t\t\t/*\n\t\t\t * Checks our values ensures they've been converted to strings and\n\t\t\t * sets the value.\n\t\t\t */\n\t\t\tif( 1 == value && value.length > 1 ) {\n\t\t\t\tvalue = 'checked';\n\t\t\t} else if( 0 == value && value.length > 1 ) {\n                value = 'unchecked';\n            } else if( 0 == value.length ){\n\t\t\t\tvalue = '';\n\t\t\t}\n\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-checkbox' );\n\t\t\treturn template( { value: value } );\n\t\t},\n\n\t\tgetListValue: function( key, trigger, value ) {\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\n\t\t\tvar options = fieldModel.get( 'options' );\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-list' );\n\t\t\treturn template( { options: options, value: value } );\n\t\t},\n\n\t\tgetListCountryValue: function( key, trigger, value ) {\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\n\t\t\tvar options = fieldModel.get( 'options' );\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-list' );\n\n\t\t\toptions.reset();\n\t\t\t_.each( nfListCountries, function( value, label ) {\n\t\t\t\toptions.add( { label: label, value: value } );\n\t\t\t});\n\n\t\t\treturn template( { options: options, value: value } );\n\t\t}\n\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Returns an object with each comparator we'd like to use.\n * This covers all the core field types.\n *\n * Add-ons can copy this code structure in order to get custom \"comparators\" for conditions.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/coreComparators',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'conditions-checkbox' ).reply( 'get:comparators', this.getCheckboxComparators );\n\t\t\tnfRadio.channel( 'conditions-listradio' ).reply( 'get:comparators', this.getListSingleComparators );\n\t\t\tnfRadio.channel( 'conditions-listselect' ).reply( 'get:comparators', this.getListSingleComparators );\n\t\t\tnfRadio.channel( 'conditions-list' ).reply( 'get:comparators', this.getListComparators );\n\t\t},\n\n\t\tgetCheckboxComparators: function( defaultComparators ) {\n\t\t\treturn {\n\t\t\t\tis: {\n\t\t\t\t\tlabel: nfcli18n.coreComparatorsIs,\n\t\t\t\t\tvalue: 'equal'\n\t\t\t\t},\n\n\t\t\t\tisnot: {\n\t\t\t\t\tlabel: nfcli18n.coreComparatorsIsNot,\n\t\t\t\t\tvalue: 'notequal'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetListComparators: function( defaultComparators ) {\n\t\t\treturn {\n\t\t\t\thas: {\n\t\t\t\t\tlabel: nfcli18n.coreComparatorsHasSelected,\n\t\t\t\t\tvalue: 'contains'\n\t\t\t\t},\n\n\t\t\t\thasnot: {\n\t\t\t\t\tlabel: nfcli18n.coreComparatorsDoesNotHaveSelected,\n\t\t\t\t\tvalue: 'notcontains'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetListSingleComparators: function( defaultComparators, currentComparator ) {\n\t\t\t/*\n\t\t\t * Radio and Select lists need to use equal and notequal.\n\t\t\t * In previous versions, however, they used contains and notcontains.\n\t\t\t * In order to keep forms working that were made in those previous versions,\n\t\t\t * we check to see if the currentComparator is contains or notcontains.\n\t\t\t * If it is, we return those values; else we return equal or not equal.\n\t\t\t */\n\t\t\tif ( 'contains' == currentComparator || 'notcontains' == currentComparator ) {\n\t\t\t\treturn {\n\t\t\t\t\thas: {\n\t\t\t\t\t\tlabel: nfcli18n.coreComparatorsHasSelected,\n\t\t\t\t\t\tvalue: 'contains'\n\t\t\t\t\t},\n\n\t\t\t\t\thasnot: {\n\t\t\t\t\t\tlabel: nfcli18n.coreComparatorsDoesNotHaveSelected,\n\t\t\t\t\t\tvalue: 'notcontains'\n\t\t\t\t\t}\n\t\t\t\t}\t\t\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t\thas: {\n\t\t\t\t\t\tlabel: nfcli18n.coreComparatorsHasSelected,\n\t\t\t\t\t\tvalue: 'equal'\n\t\t\t\t\t},\n\n\t\t\t\t\thasnot: {\n\t\t\t\t\t\tlabel: nfcli18n.coreComparatorsDoesNotHaveSelected,\n\t\t\t\t\t\tvalue: 'notequal'\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t},\n\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Returns an object with each trigger we'd like to use.\n * This covers all the core field types.\n *\n * Add-ons can copy this code structure in order to get custom \"triggers\" for conditions.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/coreTriggers',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'conditions-list' ).reply( 'get:triggers', this.getListTriggers );\n\t\t\tnfRadio.channel( 'conditions-submit' ).reply( 'get:triggers', this.getSubmitTriggers );\n\t\t\tnfRadio.channel( 'conditions-html' ).reply( 'get:triggers', this.getHTMLTriggers );\n\t\t\tnfRadio.channel( 'conditions-hr' ).reply( 'get:triggers', this.getDividerTriggers );\n\t\t\tnfRadio.channel( 'conditions-hidden' ).reply( 'get:triggers', this.getHiddenTriggers );\n\t\t},\n\n\t\tgetListTriggers: function( defaultTriggers ) {\n\t\t\tvar triggers = _.extend( defaultTriggers, {\n\t\t\t\tselect_option: {\n\t\t\t\t\tlabel: nfcli18n.coreTriggersSelectOption,\n\t\t\t\t\tvalue: 'select_option'\n\t\t\t\t},\n\n\t\t\t\tdeselect_option: {\n\t\t\t\t\tlabel: nfcli18n.coreTriggersDeselectOption,\n\t\t\t\t\tvalue: 'deselect_option'\n\t\t\t\t},\n\n\t\t\t\tshow_option: {\n\t\t\t\t\tlabel: nfcli18n.coreTriggersShowOption,\n\t\t\t\t\tvalue: 'show_option'\n\t\t\t\t},\n\n\t\t\t\thide_option: {\n\t\t\t\t\tlabel: nfcli18n.coreTriggersHideOption,\n\t\t\t\t\tvalue: 'hide_option'\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tvar triggers = _.omit( defaultTriggers, 'change_value' );\n\n\t\t\treturn triggers;\n\t\t},\n\n\t\tgetSubmitTriggers: function( defaultTriggers ) {\n\t\t\treturn _.omit( defaultTriggers, ['change_value', 'set_required', 'unset_required'] );\n\t\t},\n\n\t\tgetHTMLTriggers: function( defaultTriggers ) {\n\t\t\treturn _.omit( defaultTriggers, ['set_required', 'unset_required'] );\n\t\t},\n\n\t\tgetDividerTriggers: function( defaultTriggers ) {\n\t\t\treturn _.omit( defaultTriggers, ['change_value', 'set_required', 'unset_required'] );\n\t\t},\n\n\t\tgetHiddenTriggers: function( defaultTriggers ) {\n\t\t\treturn _.omit( defaultTriggers, ['set_required', 'unset_required'] );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns the view to use in the drawer header.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/getDrawerHeader',[ 'views/drawerHeader' ], function( DrawerHeaderView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'conditional_logic' ).reply( 'get:drawerHeaderView', this.getDrawerHeaderView, this );\n\t\t},\n\n\t\tgetDrawerHeaderView: function() {\n\t\t\treturn DrawerHeaderView;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Tracks key changes and updates when/then/else models\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/trackKeyChanges',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:whenModel', this.registerKeyChangeTracker );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:thenModel', this.registerKeyChangeTracker );\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:elseModel', this.registerKeyChangeTracker );\n\t\t},\n\n\t\tregisterKeyChangeTracker: function( itemModel ) {\n            // Update selected field if the selected field's key changes.\n            itemModel.listenTo( nfRadio.channel( 'app' ), 'replace:fieldKey', this.updateKey, itemModel );\n        },\n\n\t\tupdateKey: function( fieldModel, keyModel, settingModel ) {\n\t\t\tvar oldKey = keyModel._previousAttributes[ 'key' ];\n            var newKey = keyModel.get( 'key' );\n            \n            if( this.get( 'key' ) == oldKey && this.cid === keyModel.cid ) {\n                this.set( 'key', newKey );\n            }\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * When we init our action model, check to see if we have a 'conditions' setting that needs to be converted into a collection.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/maybeConvertConditions',[ 'models/conditionModel' ], function( ConditionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'init:actionModel', this.maybeConvertConditions );\n\t\t},\n\n\t\tmaybeConvertConditions: function( actionModel ) {\n\t\t\tvar conditions = actionModel.get( 'conditions' );\n\t\t\tif ( ! conditions ) {\n\t\t\t\tactionModel.set( 'conditions', new ConditionModel() );\n\t\t\t} else if ( false === conditions instanceof Backbone.Model ) {\n\t\t\t\tactionModel.set( 'conditions', new ConditionModel( conditions ) );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Register filters for our when/then key groups/settings.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/filters',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tfilters: [],\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'conditions' ).reply( 'add:groupFilter', this.addFilter, this );\n\t\t\tnfRadio.channel( 'conditions' ).reply( 'get:groupFilters', this.getFilters, this );\n\t\t},\n\n\t\taddFilter: function( callback ) {\n\t\t\tthis.filters.push( callback );\n\t\t},\n\n\t\tgetFilters: function() {\n\t\t\treturn this.filters;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Loads all of our custom controllers.\n *\n * @package Ninja Forms Conditional Logic\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/loadControllers',[\n\t'controllers/templateHelpers',\n\t'controllers/returnChildView',\n\t'models/conditionCollection',\n\t'views/drawerHeader',\n\t'controllers/newCondition',\n\t'controllers/updateSettings',\n\t'controllers/clickControls',\n\t'controllers/undo',\n\t// 'controllers/maybeModifyElse',\n\t'controllers/coreValues',\n\t'controllers/coreComparators',\n\t'controllers/coreTriggers',\n\t'controllers/getDrawerHeader',\n\t'controllers/trackKeyChanges',\n\t'controllers/maybeConvertConditions',\n\t'controllers/filters'\n\n\t], function(\n\n\tTemplateHelpers,\n\tReturnChildView,\n\tConditionCollection,\n\tDrawerHeaderView,\n\tNewCondition,\n\tUpdateSettings,\n\tClickControls,\n\tUndo,\n\t// MaybeModifyElse,\n\tCoreValues,\n\tCoreComparators,\n\tCoreTriggers,\n\tGetDrawerHeader,\n\tTrackKeyChanges,\n\tMaybeConvertConditions,\n\tFilters\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnew TemplateHelpers();\n\t\t\tnew ReturnChildView();\n\t\t\tnew NewCondition();\n\t\t\tnew UpdateSettings();\n\t\t\tnew ClickControls();\n\t\t\tnew Undo();\n\t\t\t// new MaybeModifyElse();\n\t\t\tnew CoreValues();\n\t\t\tnew CoreComparators();\n\t\t\tnew CoreTriggers();\n\t\t\tnew GetDrawerHeader();\n\t\t\tnew TrackKeyChanges();\n\t\t\tnew MaybeConvertConditions();\n\t\t\tnew Filters();\n\t\t}\n\t});\n\n\treturn controller;\n} );\n\n","var nfRadio = Backbone.Radio;\n\nrequire( [ 'controllers/loadControllers', 'models/conditionCollection' ], function( LoadControllers, ConditionCollection ) {\n\n\tvar NFConditionalLogic = Marionette.Application.extend( {\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'after:appStart', this.afterNFLoad );\n\t\t},\n\n\t\tonStart: function() {\n\t\t\tnew LoadControllers();\n\t\t},\n\n\t\tafterNFLoad: function( app ) {\n\t\t\t/*\n\t\t\t * Convert our form's \"condition\" setting into a collection.\n\t\t\t */\n\t\t\tvar conditions = nfRadio.channel( 'settings' ).request( 'get:setting', 'conditions' );\n\n\t\t\tif ( false === conditions instanceof Backbone.Collection ) {\n\t\t\t\tconditions = new ConditionCollection( conditions );\n\t\t\t\tnfRadio.channel( 'settings' ).request( 'update:setting', 'conditions', conditions, true );\n\t\t\t}\n\t\t}\n\t} );\n\n\tvar nfConditionalLogic = new NFConditionalLogic();\n\tnfConditionalLogic.start();\n} );\ndefine(\"main\", function(){});\n\n"]}